// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"database/sql"
	"time"
)

type AuditLog struct {
	ID               int64          `json:"id"`
	Timestamp        time.Time      `json:"timestamp"`
	EventSource      string         `json:"eventSource"`
	UserIdentity     int64          `json:"userIdentity"`
	SourceIp         sql.NullString `json:"sourceIp"`
	EventType        string         `json:"eventType"`
	EventOutcome     string         `json:"eventOutcome"`
	AffectedResource sql.NullString `json:"affectedResource"`
	RequestID        sql.NullString `json:"requestId"`
	Severity         sql.NullString `json:"severity"`
	Details          sql.NullString `json:"details"`
	CreatedAt        time.Time      `json:"createdAt"`
	UpdatedAt        time.Time      `json:"updatedAt"`
	SessionID        sql.NullString `json:"sessionId"`
}

type Backup struct {
	ID               int64          `json:"id"`
	ScheduleID       sql.NullInt64  `json:"scheduleId"`
	TargetID         int64          `json:"targetId"`
	Status           string         `json:"status"`
	SizeBytes        sql.NullInt64  `json:"sizeBytes"`
	StartedAt        time.Time      `json:"startedAt"`
	CompletedAt      sql.NullTime   `json:"completedAt"`
	ErrorMessage     sql.NullString `json:"errorMessage"`
	CreatedAt        time.Time      `json:"createdAt"`
	NotificationSent int64          `json:"notificationSent"`
}

type BackupSchedule struct {
	ID             int64          `json:"id"`
	Name           string         `json:"name"`
	Description    sql.NullString `json:"description"`
	CronExpression string         `json:"cronExpression"`
	TargetID       int64          `json:"targetId"`
	RetentionDays  int64          `json:"retentionDays"`
	Enabled        bool           `json:"enabled"`
	CreatedAt      time.Time      `json:"createdAt"`
	UpdatedAt      sql.NullTime   `json:"updatedAt"`
	LastRunAt      sql.NullTime   `json:"lastRunAt"`
	NextRunAt      sql.NullTime   `json:"nextRunAt"`
}

type BackupTarget struct {
	ID             int64          `json:"id"`
	Name           string         `json:"name"`
	BucketName     sql.NullString `json:"bucketName"`
	Region         sql.NullString `json:"region"`
	Endpoint       sql.NullString `json:"endpoint"`
	BucketPath     sql.NullString `json:"bucketPath"`
	AccessKeyID    sql.NullString `json:"accessKeyId"`
	SecretKey      sql.NullString `json:"secretKey"`
	S3PathStyle    sql.NullBool   `json:"s3PathStyle"`
	ResticPassword sql.NullString `json:"resticPassword"`
	Type           string         `json:"type"`
	CreatedAt      time.Time      `json:"createdAt"`
	UpdatedAt      sql.NullTime   `json:"updatedAt"`
}

type BlockchainPlatform struct {
	Name string `json:"name"`
}

type ChaincodeProject struct {
	ID                int64          `json:"id"`
	Name              string         `json:"name"`
	Description       sql.NullString `json:"description"`
	Boilerplate       sql.NullString `json:"boilerplate"`
	CreatedAt         time.Time      `json:"createdAt"`
	UpdatedAt         time.Time      `json:"updatedAt"`
	Slug              string         `json:"slug"`
	ContainerID       sql.NullString `json:"containerId"`
	ContainerName     sql.NullString `json:"containerName"`
	Status            sql.NullString `json:"status"`
	LastStartedAt     sql.NullTime   `json:"lastStartedAt"`
	LastStoppedAt     sql.NullTime   `json:"lastStoppedAt"`
	ContainerPort     sql.NullInt64  `json:"containerPort"`
	NetworkID         sql.NullInt64  `json:"networkId"`
	EndorsementPolicy sql.NullString `json:"endorsementPolicy"`
}

type Conversation struct {
	ID        int64     `json:"id"`
	ProjectID int64     `json:"projectId"`
	StartedAt time.Time `json:"startedAt"`
}

type FabricChaincode struct {
	ID        int64        `json:"id"`
	Name      string       `json:"name"`
	NetworkID int64        `json:"networkId"`
	CreatedAt sql.NullTime `json:"createdAt"`
}

type FabricChaincodeDefinition struct {
	ID                int64          `json:"id"`
	ChaincodeID       int64          `json:"chaincodeId"`
	Version           string         `json:"version"`
	Sequence          int64          `json:"sequence"`
	DockerImage       string         `json:"dockerImage"`
	EndorsementPolicy sql.NullString `json:"endorsementPolicy"`
	ChaincodeAddress  sql.NullString `json:"chaincodeAddress"`
	CreatedAt         sql.NullTime   `json:"createdAt"`
}

type FabricChaincodeDefinitionEvent struct {
	ID           int64          `json:"id"`
	DefinitionID int64          `json:"definitionId"`
	EventType    string         `json:"eventType"`
	EventData    sql.NullString `json:"eventData"`
	CreatedAt    sql.NullTime   `json:"createdAt"`
}

type FabricChaincodeDefinitionPeerStatus struct {
	ID           int64        `json:"id"`
	DefinitionID int64        `json:"definitionId"`
	PeerID       int64        `json:"peerId"`
	Status       string       `json:"status"`
	LastUpdated  sql.NullTime `json:"lastUpdated"`
}

type FabricOrganization struct {
	ID              int64          `json:"id"`
	MspID           string         `json:"mspId"`
	Description     sql.NullString `json:"description"`
	Config          sql.NullString `json:"config"`
	CaConfig        sql.NullString `json:"caConfig"`
	SignKeyID       sql.NullInt64  `json:"signKeyId"`
	TlsRootKeyID    sql.NullInt64  `json:"tlsRootKeyId"`
	AdminTlsKeyID   sql.NullInt64  `json:"adminTlsKeyId"`
	AdminSignKeyID  sql.NullInt64  `json:"adminSignKeyId"`
	ClientSignKeyID sql.NullInt64  `json:"clientSignKeyId"`
	ProviderID      sql.NullInt64  `json:"providerId"`
	CreatedAt       time.Time      `json:"createdAt"`
	CreatedBy       sql.NullInt64  `json:"createdBy"`
	UpdatedAt       sql.NullTime   `json:"updatedAt"`
	CrlKeyID        sql.NullInt64  `json:"crlKeyId"`
	CrlLastUpdate   sql.NullTime   `json:"crlLastUpdate"`
}

type FabricRevokedCertificate struct {
	ID                   int64         `json:"id"`
	FabricOrganizationID int64         `json:"fabricOrganizationId"`
	SerialNumber         string        `json:"serialNumber"`
	RevocationTime       time.Time     `json:"revocationTime"`
	Reason               int64         `json:"reason"`
	IssuerCertificateID  sql.NullInt64 `json:"issuerCertificateId"`
	CreatedAt            time.Time     `json:"createdAt"`
	UpdatedAt            time.Time     `json:"updatedAt"`
}

type Key struct {
	ID                int64          `json:"id"`
	Name              string         `json:"name"`
	Description       sql.NullString `json:"description"`
	Algorithm         string         `json:"algorithm"`
	KeySize           sql.NullInt64  `json:"keySize"`
	Curve             sql.NullString `json:"curve"`
	Format            string         `json:"format"`
	PublicKey         string         `json:"publicKey"`
	PrivateKey        string         `json:"privateKey"`
	Certificate       sql.NullString `json:"certificate"`
	Status            string         `json:"status"`
	CreatedAt         time.Time      `json:"createdAt"`
	UpdatedAt         time.Time      `json:"updatedAt"`
	ExpiresAt         sql.NullTime   `json:"expiresAt"`
	LastRotatedAt     sql.NullTime   `json:"lastRotatedAt"`
	SigningKeyID      sql.NullInt64  `json:"signingKeyId"`
	Sha256Fingerprint string         `json:"sha256Fingerprint"`
	Sha1Fingerprint   string         `json:"sha1Fingerprint"`
	ProviderID        int64          `json:"providerId"`
	UserID            int64          `json:"userId"`
	IsCa              int64          `json:"isCa"`
	EthereumAddress   sql.NullString `json:"ethereumAddress"`
}

type KeyProvider struct {
	ID        int64     `json:"id"`
	Name      string    `json:"name"`
	Type      string    `json:"type"`
	IsDefault int64     `json:"isDefault"`
	Config    string    `json:"config"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type KeyProviderType struct {
	Name string `json:"name"`
}

type Message struct {
	ID             int64         `json:"id"`
	ConversationID int64         `json:"conversationId"`
	ParentID       sql.NullInt64 `json:"parentId"`
	Sender         string        `json:"sender"`
	Content        string        `json:"content"`
	CreatedAt      time.Time     `json:"createdAt"`
}

type Network struct {
	ID                    int64          `json:"id"`
	Name                  string         `json:"name"`
	NetworkID             sql.NullString `json:"networkId"`
	Platform              string         `json:"platform"`
	Status                string         `json:"status"`
	Description           sql.NullString `json:"description"`
	Config                sql.NullString `json:"config"`
	DeploymentConfig      sql.NullString `json:"deploymentConfig"`
	ExposedPorts          sql.NullString `json:"exposedPorts"`
	Domain                sql.NullString `json:"domain"`
	CreatedAt             time.Time      `json:"createdAt"`
	CreatedBy             sql.NullInt64  `json:"createdBy"`
	UpdatedAt             sql.NullTime   `json:"updatedAt"`
	GenesisBlockB64       sql.NullString `json:"genesisBlockB64"`
	CurrentConfigBlockB64 sql.NullString `json:"currentConfigBlockB64"`
}

type NetworkNode struct {
	ID        int64          `json:"id"`
	NetworkID int64          `json:"networkId"`
	NodeID    int64          `json:"nodeId"`
	Role      string         `json:"role"`
	Status    string         `json:"status"`
	Config    sql.NullString `json:"config"`
	CreatedAt time.Time      `json:"createdAt"`
	UpdatedAt time.Time      `json:"updatedAt"`
}

type Node struct {
	ID                   int64          `json:"id"`
	Name                 string         `json:"name"`
	Slug                 string         `json:"slug"`
	Platform             string         `json:"platform"`
	Status               string         `json:"status"`
	Description          sql.NullString `json:"description"`
	NetworkID            sql.NullInt64  `json:"networkId"`
	Config               sql.NullString `json:"config"`
	Resources            sql.NullString `json:"resources"`
	Endpoint             sql.NullString `json:"endpoint"`
	PublicEndpoint       sql.NullString `json:"publicEndpoint"`
	P2pAddress           sql.NullString `json:"p2pAddress"`
	CreatedAt            time.Time      `json:"createdAt"`
	CreatedBy            sql.NullInt64  `json:"createdBy"`
	UpdatedAt            sql.NullTime   `json:"updatedAt"`
	FabricOrganizationID sql.NullInt64  `json:"fabricOrganizationId"`
	NodeType             sql.NullString `json:"nodeType"`
	NodeConfig           sql.NullString `json:"nodeConfig"`
	DeploymentConfig     sql.NullString `json:"deploymentConfig"`
	ErrorMessage         sql.NullString `json:"errorMessage"`
}

type NodeEvent struct {
	ID          int64          `json:"id"`
	NodeID      int64          `json:"nodeId"`
	EventType   string         `json:"eventType"`
	Description string         `json:"description"`
	Data        sql.NullString `json:"data"`
	Status      string         `json:"status"`
	CreatedAt   time.Time      `json:"createdAt"`
}

type NodeKey struct {
	ID        int64     `json:"id"`
	NodeID    int64     `json:"nodeId"`
	KeyID     int64     `json:"keyId"`
	KeyType   string    `json:"keyType"`
	CreatedAt time.Time `json:"createdAt"`
}

type NodeKeyType struct {
	Name string `json:"name"`
}

type NodeStatus struct {
	Name string `json:"name"`
}

type NodeType struct {
	Name string `json:"name"`
}

type NotificationProvider struct {
	ID                      int64          `json:"id"`
	Name                    string         `json:"name"`
	Type                    string         `json:"type"`
	Config                  string         `json:"config"`
	IsDefault               bool           `json:"isDefault"`
	IsEnabled               bool           `json:"isEnabled"`
	CreatedAt               time.Time      `json:"createdAt"`
	UpdatedAt               time.Time      `json:"updatedAt"`
	NotifyNodeDowntime      bool           `json:"notifyNodeDowntime"`
	NotifyBackupSuccess     bool           `json:"notifyBackupSuccess"`
	NotifyBackupFailure     bool           `json:"notifyBackupFailure"`
	NotifyS3ConnectionIssue bool           `json:"notifyS3ConnectionIssue"`
	LastTestAt              sql.NullTime   `json:"lastTestAt"`
	LastTestStatus          sql.NullString `json:"lastTestStatus"`
	LastTestMessage         sql.NullString `json:"lastTestMessage"`
}

type Plugin struct {
	Name               string         `json:"name"`
	ApiVersion         string         `json:"apiVersion"`
	Kind               string         `json:"kind"`
	Metadata           interface{}    `json:"metadata"`
	Spec               interface{}    `json:"spec"`
	CreatedAt          time.Time      `json:"createdAt"`
	UpdatedAt          time.Time      `json:"updatedAt"`
	DeploymentMetadata interface{}    `json:"deploymentMetadata"`
	DeploymentStatus   sql.NullString `json:"deploymentStatus"`
}

type PrometheusConfig struct {
	ID                  int64          `json:"id"`
	PrometheusPort      int64          `json:"prometheusPort"`
	DataDir             string         `json:"dataDir"`
	ConfigDir           string         `json:"configDir"`
	ContainerName       string         `json:"containerName"`
	ScrapeInterval      int64          `json:"scrapeInterval"`
	EvaluationInterval  int64          `json:"evaluationInterval"`
	DeploymentMode      string         `json:"deploymentMode"`
	DockerImage         string         `json:"dockerImage"`
	DockerNetwork       sql.NullString `json:"dockerNetwork"`
	DockerRestartPolicy string         `json:"dockerRestartPolicy"`
	DockerExtraArgs     sql.NullString `json:"dockerExtraArgs"`
	CreatedAt           time.Time      `json:"createdAt"`
	UpdatedAt           time.Time      `json:"updatedAt"`
}

type Session struct {
	ID             int64          `json:"id"`
	SessionID      string         `json:"sessionId"`
	UserID         int64          `json:"userId"`
	Token          string         `json:"token"`
	IpAddress      sql.NullString `json:"ipAddress"`
	UserAgent      sql.NullString `json:"userAgent"`
	CreatedAt      time.Time      `json:"createdAt"`
	UpdatedAt      time.Time      `json:"updatedAt"`
	ExpiresAt      time.Time      `json:"expiresAt"`
	LastActivityAt time.Time      `json:"lastActivityAt"`
}

type Setting struct {
	ID        int64        `json:"id"`
	Config    string       `json:"config"`
	CreatedAt sql.NullTime `json:"createdAt"`
	UpdatedAt sql.NullTime `json:"updatedAt"`
}

type ToolCall struct {
	ID        int64          `json:"id"`
	MessageID int64          `json:"messageId"`
	ToolName  string         `json:"toolName"`
	Arguments string         `json:"arguments"`
	Result    sql.NullString `json:"result"`
	Error     sql.NullString `json:"error"`
	CreatedAt time.Time      `json:"createdAt"`
}

type User struct {
	ID          int64          `json:"id"`
	Username    string         `json:"username"`
	Password    string         `json:"password"`
	Name        sql.NullString `json:"name"`
	Email       sql.NullString `json:"email"`
	Role        sql.NullString `json:"role"`
	Provider    sql.NullString `json:"provider"`
	ProviderID  sql.NullString `json:"providerId"`
	AvatarUrl   sql.NullString `json:"avatarUrl"`
	CreatedAt   time.Time      `json:"createdAt"`
	LastLoginAt sql.NullTime   `json:"lastLoginAt"`
	UpdatedAt   sql.NullTime   `json:"updatedAt"`
}
